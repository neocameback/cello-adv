# This compose file will deploy the services, and bootup a mongo server.

# Copyright IBM Corp., All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
# Local `/opt/cello/mongo` will be used for the db storage.

#  cello-nginx: proxy to access operator dashboard service, listen on 8080
#  cello-operator-dashboard: dashboard service for operators
#  cello-user-dashboard: user service of cello, listen on 8081
#  engine: engine service of cello to provide RESTful APIs, listen on 80
#  cello-mongo: mongo db

version: '3.2'
services:
  # nginx as front end for the services, disable now
  #nginx:
  #  image: hyperledger/cello-nginx
  #  hostname: cello-nginx
  #  container_name: cello-nginx
  #  restart: always
  #  deploy:
  #    resources:
  #      limits:
  #        cpus: '0.50'
  #        memory: 2048M
  #      reservations:
  #        cpus: '0.10'
  #        memory: 256M
  #  ports:
  #    - "80:80"
  #    - "8080:8080"
  #  environment:
  #    - BACKEND=cello-operator-dashboard
  #    - PORT=8080
  #    - USERNAME=admin
  #    - PASSWORD=pass
  rabbitmq:
    image: rabbitmq
    restart: unless-stopped
    container_name: cello-dashboard_rabbitmq
    environment:
    - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
    - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
    - RABBITMQ_DEFAULT_VHOST=$RABBITMQ_DEFAULT_VHOST

  # cello dashboard service for network operator
  operator-dashboard:
    image: hyperledger/cello-operator-dashboard
    container_name: cello-operator-dashboard
    hostname: cello-operator-dashboard
    restart: unless-stopped
    links:
      - rabbitmq
      - keycloak
      - parse
    environment:
      - DEBUG=False    # in debug mode, service will auto-restart
      - LOG_LEVEL=$LOG_LEVEL  # what level log will be output
      - STATIC_FOLDER=$STATIC_FOLDER
      - TEMPLATE_FOLDER=$TEMPLATE_FOLDER
      - ENABLE_EMAIL_ACTIVE=$ENABLE_EMAIL_ACTIVE
      - BROKER=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/$RABBITMQ_DEFAULT_VHOST
      - BACKEND=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/$RABBITMQ_DEFAULT_VHOST
      - SSO_KEY=$OPERATOR_DASHBOARD_SSO_KEY
      - SSO_SECRET=$OPERATOR_DASHBOARD_SSO_SECRET
      - SERVER_PUBLIC_IP=$SERVER_PUBLIC_IP
      - KEYCLOAK_REALM=$KEYCLOAK_REALM
      - KEYCLOAK_SERVER_PORT=$KEYCLOAK_SERVER_PORT
      - KEYCLOAK_ADMIN_NAME=$KEYCLOAK_ADMIN_NAME
      - KEYCLOAK_ADMIN_PASSWORD=$KEYCLOAK_ADMIN_PASSWORD
      - PARSE_API_ROOT=http://parse:1337/parse
      - PARSE_SERVER_APPLICATION_ID=$PARSE_SERVER_APPLICATION_ID
      - PARSE_SERVER_MASTER_KEY=$PARSE_SERVER_MASTER_KEY
      - PARSE_SERVER_REST_API_KEY=$PARSE_SERVER_REST_API_KEY
    ports:
      - "8080:8080"
    volumes:
      - $ROOT_PATH/src/operator-dashboard/agent/docker/_compose_files:/cello

 #TODO: need to follow other images to put at dockerhub
  user-dashboard:
    image: hyperledger/cello-user-dashboard
    container_name: cello-user-dashboard
    hostname: cello-user-dashboard
    links:
      - operator-dashboard
      - keycloak
      - parse
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=production
      - RESTFUL_SERVER=operator-dashboard:8080
      - DEBUG=node:*
      - DEV=$DEV
      - LOG_LEVEL=INFO
      - ENABLE_EMAIL_ACTIVE=$ENABLE_EMAIL_ACTIVE
      - SMTP_SERVER=$SMTP_SERVER
      - SMTP_PORT=$SMTP_PORT
      - SMTP_AUTH_USERNAME=$SMTP_AUTH_USERNAME
      - SMTP_AUTH_PASSWORD=$SMTP_AUTH_PASSWORD
      - FROM_EMAIL=$FROM_EMAIL
      - WEBROOT=$USER_DASHBOARD_WEBROOT
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      - SSO_KEY=$USER_DASHBOARD_SSO_KEY
      - SSO_SECRET=$USER_DASHBOARD_SSO_SECRET
      - SERVER_PUBLIC_IP=$SERVER_PUBLIC_IP
      - KEYCLOAK_REALM=$KEYCLOAK_REALM
      - KEYCLOAK_SERVER_PORT=$KEYCLOAK_SERVER_PORT
      - PARSE_SERVER_URL=http://parse:1337/parse
      - PARSE_SERVER_APPLICATION_ID=$PARSE_SERVER_APPLICATION_ID
      - PARSE_SERVER_MASTER_KEY=$PARSE_SERVER_MASTER_KEY
      - PARSE_SERVER_JAVASCRIPT_KEY=$PARSE_SERVER_JAVASCRIPT_KEY
    volumes:
      - /opt/cello/baas:/opt/data

  # cello engine service
  engine:
    image: hyperledger/cello-engine
    container_name: cello-engine
    hostname: cello-engine
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://cello-mongo:27017  # used by pymongo, deprecate soon
      - MONGO_HOST=mongo
      - MONGO_DB=dev
      - MONGODB_PORT=27017
      - DEBUG=$DEV    # in debug mode, service will auto-restart
      - LOG_LEVEL=$LOG_LEVEL  # what level log will be output
    ports:
      - "80:80"

  # cello watchdog service
  watchdog:
    image: hyperledger/cello-watchdog
    container_name: cello-watchdog
    hostname: cello-watchdog
    restart: unless-stopped
    links:
      - parse
    environment:
      - MONGO_URL=mongodb://mongo:27017  # used by pymongo, deprecate soon
      - MONGO_HOST=mongo
      - MONGO_DB=dev
      - MONGODB_PORT=27017
      - DEBUG=$DEV    # in debug mode, service will auto-restart
      - LOG_LEVEL=$LOG_LEVEL  # what level log will be output
      - PARSE_API_ROOT=http://parse:1337/parse
      - PARSE_SERVER_APPLICATION_ID=$PARSE_SERVER_APPLICATION_ID
      - PARSE_SERVER_MASTER_KEY=$PARSE_SERVER_MASTER_KEY
      - PARSE_SERVER_REST_API_KEY=$PARSE_SERVER_REST_API_KEY

  # mongo database, may use others in future
  mongo:
    image: mongo:3.4.10
    hostname: cello-mongo
    container_name: cello-mongo
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 2048M
        reservations:
          cpus: '0.10'
          memory: 256M
    environment:
      - NO_USED=0
    ports:
      - "27017:27017"
    volumes:
      - /opt/cello/mongo:/data/db

  mysql:
    image: mariadb:10.3.10
    container_name: cello-keycloak-mysql
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=$KEYCLOAK_DB_USERNAME
      - MYSQL_PASSWORD=$KEYCLOAK_DB_PASSWORD
      - MYSQL_ROOT_PASSWORD=$KEYCLOAK_MYSQL_ROOT_PASSWORD
    ports:
      - "3306:3306"
    volumes:
      - /opt/cello/keycloak-mysql:/var/lib/mysql

  keycloak:
    image: jboss/keycloak:4.5.0.Final
    container_name: cello-keycloak-server
    environment:
      - KEYCLOAK_USER=$KEYCLOAK_ADMIN_NAME
      - KEYCLOAK_PASSWORD=$KEYCLOAK_ADMIN_PASSWORD
      - DB_ADDR=mysql
      - DB_USER=$KEYCLOAK_DB_USERNAME
      - DB_PASSWORD=$KEYCLOAK_DB_PASSWORD
      - KEYCLOAK_HTTPS_PORT=$KEYCLOAK_SERVER_HTTPS_PORT
    volumes:
      - $ROOT_PATH/thirdparty/keycloak/resources/img/keycloak-bg.png:/opt/jboss/keycloak/themes/keycloak/login/resources/img/keycloak-bg.png
      - $ROOT_PATH/thirdparty/keycloak/resources/img/keycloak-logo-text.png:/opt/jboss/keycloak/themes/keycloak/login/resources/img/keycloak-logo-text.png
    links:
      - mysql
    ports:
      - $KEYCLOAK_SERVER_PORT:8080
      - $KEYCLOAK_SERVER_HTTPS_PORT:8443

  parse:
    image: hyperledger/cello-parse-server
    container_name: cello-parse-server
    links:
    - mongo
    environment:
    - PARSE_SERVER_APPLICATION_ID=$PARSE_SERVER_APPLICATION_ID
    - PARSE_SERVER_MASTER_KEY=$PARSE_SERVER_MASTER_KEY
    - PARSE_SERVER_REST_API_KEY=$PARSE_SERVER_REST_API_KEY
    - PARSE_SERVER_DATABASE_URI=$PARSE_SERVER_DATABASE_URI
    - PARSE_SERVER_OBJECT_ID_SIZE=32
    - PARSE_SERVER_JAVASCRIPT_KEY=$PARSE_SERVER_JAVASCRIPT_KEY
    - PARSE_SERVER_CLOUD=cloud/main.js
    - SILENT=true
    volumes:
    - /opt/cello/baas:/opt/data
